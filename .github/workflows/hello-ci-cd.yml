# This is a basic workflow to help you get started with Actions
name: CI/CD Pipline Demo

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  name: 'Prateek'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  repo-context-variables:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      task: 'workflow job'
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:  
      - name: env context
        run: echo Hello $name, running $task for ${{ env.step }} script
        env:
          step: 'one line'
          
      - name: github context
        run: |
          echo Run a multi-line script
          echo Owner: ${{ github.repository_owner }}
          echo Repository: ${{ github.repository }}
          echo Branch: ${{ github.ref_name }}
          
      - name: vars context
        run: |
            echo API_URL: ${{ vars.API_URL }}
            echo CLIENT_ID: ${{ vars.CLIENT_ID }}
            
      - name: secrets context
        run: |
            echo API_KEY: ${{ secrets.API_KEY }}
            ${{ secrets.API_KEY }}
            echo API_SECRET: ${{ secrets.API_SECRET }}
            ${{ secrets.API_SECRET }}

  staging-context-variables:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: staging

    steps:
      - name: staging vars context
        run: |
            echo API_URL: ${{ vars.API_URL }}
            echo CLIENT_ID: ${{ vars.CLIENT_ID }}
            
      - name: staging secrets context
        run: |
            echo API_KEY: ${{ secrets.API_KEY }}
            ${{ secrets.API_KEY }}
            echo API_SECRET: ${{ secrets.API_SECRET }}
            ${{ secrets.API_SECRET }}

  production-context-variables:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: production vars context
        run: |
            echo API_URL: ${{ vars.API_URL }}
            echo CLIENT_ID: ${{ vars.CLIENT_ID }}
            
      - name: production secrets context
        run: |
            echo API_KEY: ${{ secrets.API_KEY }}
            ${{ secrets.API_KEY }}
            echo API_SECRET: ${{ secrets.API_SECRET }}
            ${{ secrets.API_SECRET }}
            
  external-context-variables:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      MY_API_KEY: ${{ secrets.API_KEY }}
      MY_API_URL:  ${{ vars.CLIENT_ID }}

    steps:  
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: checkout repo directory
        run: pwd
      - name: repo files list
        run: ls -ll
      - name: giving extarnal.sh file execute permission
        run: chmod +x external.sh
      - name: execute external.sh file
        run: ./external.sh
